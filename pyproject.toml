[project]
name = "agent-book"
version = "0.1.0"
description = "LangChain と LangGraph による RAG・AI エージェント［実践］入門のサンプルコード"
readme = "README.md"
requires-python = "==3.10.12"
# chapter07以外用
dependencies = [
    # 書籍の本文中のchap07以外で明示されているバージョンは固定。
    "langchain==0.3.0",
    "langchain-openai==0.2.0",
    "openai==1.40.6",
    "langchain-community==0.3.0",
    "langgraph==0.2.22",
    "langgraph-checkpoint==1.0.11",
    "GitPython==3.1.43",
    "langchain-text-splitters==0.3.0",
    "langchain-chroma==0.1.4",
    "tavily-python==0.5.0",
    "langchain-cohere==0.3.0",
    "rank-bm25==0.2.2",
    # for chap12
    "langchain-anthropic==0.2.0",
    "numpy==1.26.4",
    "faiss-cpu==1.8.0.post1",
    "pydantic-settings==2.5.2",
    "retry==0.9.2",
    "decorator==4.4.2",
    # 以下、本文中には特に示されていないライブラリ。
    # 各章のreqiurements.txt とあわせるのがベターだが、ここではまとめて記述。
    "ipykernel>=6.29.5",
    "python-dotenv>=1.0.1",
    "tiktoken>=0.8.0",
    "ipywidgets>=7.7.1",
    "pygraphviz>=1.1.4",
]

# chap07用 ragasは、langchain v0.3系の対応をしていないので、langchainもv0.2系を指定
# dependencies = [
#     "langchain-core==0.2.30",
#     "langchain-openai==0.1.21",
#     "langchain-community==0.2.12",
#     "GitPython==3.1.43",
#     "langchain-chroma==0.1.2",
#     "chromadb==0.5.3",
#     "ragas==0.1.14",
#     "nest-asyncio==1.6.0",
#     # 本文中にはないけれども必要なパッケージ
#     "ipykernel>=6.29.5",
#     "python-dotenv>=1.0.1",
#     "tiktoken>=0.8.0",
#     "ipywidgets>=7.7.1",
# ]


[tool.uv]
dev-dependencies = ["pre-commit>=4.0.1", "ruff>=0.7", "pyright>=1.1"]

[tool.ruff]
exclude = [
    # default setting: https://docs.astral.sh/ruff/configuration/
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    # add this project's setting
    "__pycache__",
    ".devcontainer",
]

line-length = 140
indent-width = 4

# python 3.10以外を使う場合はそれに合わせて下さい。
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# see. https://docs.astral.sh/ruff/configuration/
select = ["E4", "E7", "E9", "F"] # same as default
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.pyright]
# ref  https://microsoft.github.io/pyright/#/configuration
## Environment Options ##
include = [
    "chapter02",
    "chapter03",
    "chapter04",
    "chapter05",
    "chapter06",
    "chapter07",
    "chapter09",
    "chapter10",
    "chapter12",
]
exclude = ["**/__pycache__", ".mypy_cache", ".ruff_cache"]
ignore = []
pythonVersion = "3.10"
pythonPlatform = "Linux"

# ["off", "basic", "standard", "strict"]
typeCheckingMode = "basic"

# 関数の返却値が親クラスで、変数側の型ヒントが子クラスの場合は、errorではなく、informationにします。
# どちらかというとpyrightがおかしい挙動ですが、妥協
reportAssignmentType = "information"

# TypedDict 内の必須でな​​いフィールドが存在するかどうかを最初に確認せずにアクセスしようとした場合
reportTypedDictNotRequiredAccess = "warning"
